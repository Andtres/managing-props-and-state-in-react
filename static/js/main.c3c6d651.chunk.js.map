{"version":3,"sources":["components/nav/index.js","components/Item/index.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","isActived","react_default","a","createElement","className","concat","class","href","src","title","number","Home","state","isActivedSecond","toggleState","_this","setState","_this$state","this","revertColum","diplay","flexDirection","nav","style","map","item","key","Item","onClick","role","Component","App","home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NAaeA,EAXH,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,UAAF,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAAC,OAAoBL,EAAwB,YAAZ,YAC7CC,EAAAC,EAAAC,cAAA,KAAGG,MAAM,uBAAuBC,KAAK,KACpCN,EAAAC,EAAAC,cAAA,OACCK,IAAI,4EACJJ,UAAU,iBCGCN,EARH,SAAAC,GAAA,IAAGU,EAAHV,EAAGU,MAAOC,EAAVX,EAAUW,OAAQV,EAAlBD,EAAkBC,UAAlB,OACXC,EAAAC,EAAAC,cAAA,MACCC,UAAS,2EAAAC,OAA6EL,GAAa,2BAClGS,EACDR,EAAAC,EAAAC,cAAA,QAAMG,MAAM,kCAAkCI,KC2EjCC,6MA7EdC,MAAQ,CACPZ,WAAY,EACZa,iBAAkB,KAEnBC,YAAc,kBACbC,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CACvBZ,UAAWY,EAAMZ,UAAY,EAAI,GAAK,EACtCa,gBAAiBD,EAAMZ,UAAY,EAAI,GAAK,8EAG7C,IADQiB,EAa+BC,KAAKN,MAApCZ,EAbAiB,EAaAjB,UAAWa,EAbXI,EAaWJ,gBACbM,EAA4B,IAAdnB,EAAkB,CACrCoB,OAAQ,OACRC,cAAe,eACZ,GACJ,OACCpB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAACmB,EAAD,CAAKtB,UAAyB,IAAdA,KAEjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMmB,MAAOJ,GAC3BlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,MAAIG,MAAM,cAzBD,CACb,CAAEG,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,UAgBGe,IAAI,SAACC,EAAMC,GAAP,OACVzB,EAAAC,EAAAC,cAACwB,EAAD,CACC3B,UAAW0B,IAAQ1B,GAAa0B,IAAQb,EACxCJ,MAAOgB,EAAKhB,MACZC,OAAQgB,EAAM,QAKlBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,OACCG,MAAK,aAAAD,OAAeL,EAAY,EAAI,UAAY,eAChDC,EAAAC,EAAAC,cAAA,MAAIG,MAAM,aAAV,iBACAL,EAAAC,EAAAC,cAAA,KAAGG,MAAM,QAAT,qKAKAL,EAAAC,EAAAC,cAAA,MAAIG,MAAM,SACVL,EAAAC,EAAAC,cAAA,8GAIAF,EAAAC,EAAAC,cAAA,KAAGG,MAAM,QACRL,EAAAC,EAAAC,cAAA,UACCyB,QAASV,KAAKJ,YACdR,MAAK,iBAAAD,OAAmBL,EAAY,EAAI,cAAgB,aAAnD,WACLO,KAAK,IACLsB,KAAK,UAJN,uBA7DUC,aCGJC,EAFH,kBAAM9B,EAAAC,EAAAC,cAAC6B,EAAD,OCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c3c6d651.chunk.js","sourcesContent":["import React from 'react'\n\nconst Nav = ({isActived}) => (\n\t<nav className={`navbar navbar ${!isActived ? 'bg-dark' : 'bg-danger' }`}>\n\t\t<a class='navbar-brand img-nav' href='#'>\n\t\t\t<img\n\t\t\t\tsrc='https://blog.leonhassan.co.uk/content/images/size/w600/2018/01/nodejs.svg'\t\t\t\t\n\t\t\t\tclassName='img-fluid'\t\t\t\t\n\t\t\t/>\t\t\t\n\t\t</a>\n\t</nav>\n)\n\nexport default Nav\n","import React from 'react'\n\nconst Nav = ({ title, number, isActived }) => (\n\t<li\n\t\tclassName={`list-group-item d-flex justify-content-between align-items-center  dark ${isActived && 'text-danger bg-warning'}`}>\n\t\t{title}\n\t\t<span class='badge badge-primary badge-pill'>{number}</span>\n\t</li>\n)\n\nexport default Nav\n","import React, { Component } from 'react'\nimport { Nav, Item } from '../../components'\n\nclass Home extends Component {\n\tstate = {\n\t\tisActived: -1,\n\t\tisActivedSecond: -1\n\t}\n\ttoggleState = () =>\n\t\tthis.setState(state => ({\n\t\t\tisActived: state.isActived < 0 ? 0 : -1,\n\t\t\tisActivedSecond: state.isActived < 0 ? 9 : -1\n\t\t}))\n\trender() {\n\t\tconst items = [\n\t\t\t{ title: 'First' },\n\t\t\t{ title: 'Second' },\n\t\t\t{ title: 'Third' },\n\t\t\t{ title: 'Fourth' },\n\t\t\t{ title: 'Fifth' },\n\t\t\t{ title: 'Sixth' },\n\t\t\t{ title: 'Seventh' },\n\t\t\t{ title: 'Eighth' },\n\t\t\t{ title: 'Ninth' },\n\t\t\t{ title: 'Tenth' }\n\t\t]\n\t\tconst { isActived, isActivedSecond } = this.state\n\t\tconst revertColum = isActived === 0 ? {\n\t\t\tdiplay: 'flex',\n\t\t\tflexDirection: 'row-reverse'\n\t\t} : {}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<Nav isActived={isActived === 0} />\n\t\t\t\t</header>\n\t\t\t\t<div className='container mt-5'>\n\t\t\t\t\t<div className='row' style={revertColum}>\n\t\t\t\t\t\t<div className='col-12 col-md-6'>\n\t\t\t\t\t\t\t<ul class='list-group'>\n\t\t\t\t\t\t\t\t{items.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\t\t\tisActived={key === isActived || key === isActivedSecond}\n\t\t\t\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\t\t\t\tnumber={key + 1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-12 col-md-6'>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass={`jumbotron ${isActived < 0 ? 'bg-info' : 'bg-warning'}`}>\n\t\t\t\t\t\t\t\t<h1 class='display-3'>React example</h1>\n\t\t\t\t\t\t\t\t<p class='lead'>\n\t\t\t\t\t\t\t\t\tReact makes it painless to create interactive UIs. Design\n\t\t\t\t\t\t\t\t\tsimple views for each Sstate in your application, and React\n\t\t\t\t\t\t\t\t\twill efficiently update and render just the\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<hr class='my-1' />\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tBuild encapsulated components that manage their own state,\n\t\t\t\t\t\t\t\t\tthen compose them to make complex UIs.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p class='lead'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleState}\n\t\t\t\t\t\t\t\t\t\tclass={`btn btn-block ${isActived < 0 ? 'btn-primary' : 'btn-danger'} btn-lg`}\n\t\t\t\t\t\t\t\t\t\thref='#'\n\t\t\t\t\t\t\t\t\t\trole='button'>\n\t\t\t\t\t\t\t\t\t\tButton\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Home\n","import React from 'react'\nimport './App.css'\nimport { Home } from './pages'\n\nconst App = () => <Home />\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}